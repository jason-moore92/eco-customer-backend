user  nginx;
worker_processes  2;
pid /var/run/nginx.pid;

# [ debug | info | notice | warn | error | crit ]
error_log  /var/log/nginx.error_log  info;

events {
  worker_connections   2000;
}

http {

        # don't send the nginx version number in error pages and Server header
        server_tokens off;

        log_format main      '$remote_addr - $remote_user [$time_local]  '
        '"$request" $status $bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '"$gzip_ratio"';

        log_format download  '$remote_addr - $remote_user [$time_local]  '
        '"$request" $status $bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '"$http_range" "$sent_http_content_range"';

        client_body_buffer_size 10K;
        client_header_buffer_size 1k;
        client_max_body_size 8m;
        large_client_header_buffers 2 1k;

        client_body_timeout 12;
        client_header_timeout 12;
        keepalive_timeout 30;
        send_timeout 10;

        gzip             on;
        gzip_comp_level  2;
        gzip_min_length  1000;
        gzip_proxied     expired no-cache no-store private auth;
        gzip_types       text/plain application/x-javascript text/xml text/css application/xml;


        server {
                listen 80;
                listen [::]:80;
                
                server_name old.api.tm.user.trademantri.in www.old.api.tm.user.trademantri.in;

                location /health {
                return  200;
                }
                location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
                }

                location / {
                        rewrite ^ https://$host$request_uri? permanent;
                }
        }

        server {
                listen 443 ssl http2;
                listen [::]:443 ssl http2;
                server_name old.api.tm.user.trademantri.in www.old.api.tm.user.trademantri.in;

                server_tokens off;
                ssl on;
                ssl_certificate /etc/letsencrypt/live/trademantri.in/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/trademantri.in/privkey.pem;

                ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

                ssl_protocols TLSv1.2;
                ssl_prefer_server_ciphers on;

                ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384;

                ssl_ecdh_curve secp384r1;
                ssl_session_tickets off;

                ssl_stapling on;
                ssl_stapling_verify on;
                resolver 127.0.0.11;
                set $upstream tmvaservices:7000;
                # nginx will now start if host is not reachable

                location /health {
                return  200;
                }

                location / {
                        try_files $uri @tmvaservices;
                }

                location @tmvaservices {
                        proxy_pass http://tmvaservices:7000;
                        add_header X-Frame-Options "SAMEORIGIN" always;
                        add_header X-XSS-Protection "1; mode=block" always;
                        add_header X-Content-Type-Options "nosniff" always;
                        add_header Referrer-Policy "no-referrer-when-downgrade" always;
                        add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
                        # WebSocket Support
                        proxy_set_header        Upgrade $http_upgrade;
                        proxy_set_header        Connection "upgrade";

                        # Host and X headers
                        proxy_set_header        Host $host;
                        proxy_set_header        X-Real-IP $remote_addr;
                        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header        X-Forwarded-Proto $scheme;

                        # Connectivity Options
                        proxy_http_version      1.1;
                        proxy_read_timeout      1800s;
                        proxy_send_timeout      1800s;
                        proxy_connect_timeout   1800s;
                        proxy_buffering         off;

                        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
                        # enable strict transport security only if you understand the implications
                }

                root /var/www/html;
                index index.html index.htm index.nginx-debian.html;
        }
}